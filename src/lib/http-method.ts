import { customMethod, RouteHandler } from './http';

export const acl = (handler: RouteHandler) => customMethod('ACL', handler);
export const bind = (handler: RouteHandler) => customMethod('BIND', handler);
export const checkout = (handler: RouteHandler) => customMethod('CHECKOUT', handler);
export const connect = (handler: RouteHandler) => customMethod('CONNECT', handler);
export const copy = (handler: RouteHandler) => customMethod('COPY', handler);
const del = (handler: RouteHandler) => customMethod('DELETE', handler);
export { del as delete };
export const get = (handler: RouteHandler) => customMethod('GET', handler);
export const head = (handler: RouteHandler) => customMethod('HEAD', handler);
export const link = (handler: RouteHandler) => customMethod('LINK', handler);
export const lock = (handler: RouteHandler) => customMethod('LOCK', handler);
export const msearch = (handler: RouteHandler) => customMethod('M-SEARCH', handler);
export const merge = (handler: RouteHandler) => customMethod('MERGE', handler);
export const mkactivity = (handler: RouteHandler) => customMethod('MKACTIVITY', handler);
export const mkcalendar = (handler: RouteHandler) => customMethod('MKCALENDAR', handler);
export const mkcol = (handler: RouteHandler) => customMethod('MKCOL', handler);
export const move = (handler: RouteHandler) => customMethod('MOVE', handler);
export const notify = (handler: RouteHandler) => customMethod('NOTIFY', handler);
export const options = (handler: RouteHandler) => customMethod('OPTIONS', handler);
export const patch = (handler: RouteHandler) => customMethod('PATCH', handler);
export const post = (handler: RouteHandler) => customMethod('POST', handler);
export const propfind = (handler: RouteHandler) => customMethod('PROPFIND', handler);
export const proppatch = (handler: RouteHandler) => customMethod('PROPPATCH', handler);
export const purge = (handler: RouteHandler) => customMethod('PURGE', handler);
export const put = (handler: RouteHandler) => customMethod('PUT', handler);
export const rebind = (handler: RouteHandler) => customMethod('REBIND', handler);
export const report = (handler: RouteHandler) => customMethod('REPORT', handler);
export const search = (handler: RouteHandler) => customMethod('SEARCH', handler);
export const source = (handler: RouteHandler) => customMethod('SOURCE', handler);
export const subscribe = (handler: RouteHandler) => customMethod('SUBSCRIBE', handler);
export const trace = (handler: RouteHandler) => customMethod('TRACE', handler);
export const unbind = (handler: RouteHandler) => customMethod('UNBIND', handler);
export const unlink = (handler: RouteHandler) => customMethod('UNLINK', handler);
export const unlock = (handler: RouteHandler) => customMethod('UNLOCK', handler);
export const unsubscribe = (handler: RouteHandler) => customMethod('UNSUBSCRIBE', handler);
